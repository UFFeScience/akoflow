apiVersion: v1
kind: Namespace
metadata:
  name: akoflow
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: akoflow
  name: akoflow-server-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: akoflow
  name: akoflow-server-cr
rules:
  - apiGroups:
      - "*"
    resources:
      - "*" # all resources
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akoflow-server-crb
  namespace: akoflow
subjects:
  - namespace: akoflow
    kind: ServiceAccount
    name: akoflow-server-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akoflow-server-cr

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: metrics-server
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
rules:
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: metrics-server
  name: system:metrics-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes/metrics
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: akoflow-server-pvc
  namespace: akoflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 64Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: akoflow-server-deployment
  namespace: akoflow
  labels:
    app: akoflow-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akoflow-server
  template:
    metadata:
      labels:
        app: akoflow-server
    spec:
      serviceAccountName: akoflow-server-sa
      containers:
        - name: akoflow-server
          image: docker.io/ovvesley/akoflow-server:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: akoflow-server-pvc
              mountPath: /app/storage
          imagePullPolicy: Always
      volumes:
        - name: akoflow-server-pvc
          persistentVolumeClaim:
            claimName: akoflow-server-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: akoflow-server-service
  namespace: akoflow
  labels:
    app: akoflow-server
spec:
  type: LoadBalancer
  selector:
    app: akoflow-server
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
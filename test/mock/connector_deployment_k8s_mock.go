// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/server/connector/connector_deployment_k8s/connector_deployment_k8s.go
//
// Generated by this command:
//
//	mockgen --source=pkg/server/connector/connector_deployment_k8s/connector_deployment_k8s.go --destination=test/mock/connector_deployment_k8s_mock.go --package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIConnectorDeployment is a mock of IConnectorDeployment interface.
type MockIConnectorDeployment struct {
	ctrl     *gomock.Controller
	recorder *MockIConnectorDeploymentMockRecorder
}

// MockIConnectorDeploymentMockRecorder is the mock recorder for MockIConnectorDeployment.
type MockIConnectorDeploymentMockRecorder struct {
	mock *MockIConnectorDeployment
}

// NewMockIConnectorDeployment creates a new mock instance.
func NewMockIConnectorDeployment(ctrl *gomock.Controller) *MockIConnectorDeployment {
	mock := &MockIConnectorDeployment{ctrl: ctrl}
	mock.recorder = &MockIConnectorDeploymentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConnectorDeployment) EXPECT() *MockIConnectorDeploymentMockRecorder {
	return m.recorder
}

// ListDeployments mocks base method.
func (m *MockIConnectorDeployment) ListDeployments() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListDeployments")
}

// ListDeployments indicates an expected call of ListDeployments.
func (mr *MockIConnectorDeploymentMockRecorder) ListDeployments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeployments", reflect.TypeOf((*MockIConnectorDeployment)(nil).ListDeployments))
}

// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/server/connector/connector_metrics_k8s/connector_metrics_k8s.go
//
// Generated by this command:
//
//	mockgen --source=pkg/server/connector/connector_metrics_k8s/connector_metrics_k8s.go --destination=test/mock/connector_metrics_k8s_mock.go --package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	connector_metrics_k8s "github.com/ovvesley/akoflow/pkg/server/connector/connector_metrics_k8s"
	gomock "go.uber.org/mock/gomock"
)

// MockIConnectorMetrics is a mock of IConnectorMetrics interface.
type MockIConnectorMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockIConnectorMetricsMockRecorder
}

// MockIConnectorMetricsMockRecorder is the mock recorder for MockIConnectorMetrics.
type MockIConnectorMetricsMockRecorder struct {
	mock *MockIConnectorMetrics
}

// NewMockIConnectorMetrics creates a new mock instance.
func NewMockIConnectorMetrics(ctrl *gomock.Controller) *MockIConnectorMetrics {
	mock := &MockIConnectorMetrics{ctrl: ctrl}
	mock.recorder = &MockIConnectorMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConnectorMetrics) EXPECT() *MockIConnectorMetricsMockRecorder {
	return m.recorder
}

// GetPodMetrics mocks base method.
func (m *MockIConnectorMetrics) GetPodMetrics(namespace, podName string) (connector_metrics_k8s.ResponseGetPodMetrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPodMetrics", namespace, podName)
	ret0, _ := ret[0].(connector_metrics_k8s.ResponseGetPodMetrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPodMetrics indicates an expected call of GetPodMetrics.
func (mr *MockIConnectorMetricsMockRecorder) GetPodMetrics(namespace, podName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodMetrics", reflect.TypeOf((*MockIConnectorMetrics)(nil).GetPodMetrics), namespace, podName)
}

// ListMetrics mocks base method.
func (m *MockIConnectorMetrics) ListMetrics() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListMetrics")
}

// ListMetrics indicates an expected call of ListMetrics.
func (mr *MockIConnectorMetricsMockRecorder) ListMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMetrics", reflect.TypeOf((*MockIConnectorMetrics)(nil).ListMetrics))
}
